@page "/rrpanel"

<div class="rr-panel-container" style="display: @(PanelService.GetVisible(RrPanelInstance) ? "block" : "none");">
    <div class="rr-panel-header">
        @if (RrPanelInstance.Tabs.Any())
        {
            <div class="rr-panel-tabs-container">
                @foreach (var tab in RrPanelInstance.Tabs)
                {
                    <a @onclick="() => SelectTab(tab)" class="rr-panel-tabs @(tab.Visible ? "" : "d-none") @(tab.Disabled ? "disabled" : "") @(tab.IsSelected ? "active" : "")">@tab.Name</a>
                }
            </div>
        }
        else
        {
            <div class="rr-panel-header-text-container">
                <span class="rr-panel-header-text">@RrPanelInstance.Header</span>
            </div>
        }

    </div>
    <div class="rr-panel-content">
        @PanelService.GetSelectedTab(RrPanelInstance)?.Content
    </div>
</div>

@code {
    [Parameter]
    public RrCommon.RrPanel RrPanelInstance { get; set; }

    protected override void OnInitialized()
    {
        PanelService.RegisterPanel(RrPanelInstance);
        PanelService.OnPanelChangeRequested += StateHasChanged;

        // Ensure a default tab is selected
        if (RrPanelInstance.Tabs.Any() && RrPanelInstance.SelectedTab == null)
        {
            PanelService.SetSelectedTab(RrPanelInstance, RrPanelInstance.Tabs.First());
        }
    }

    private void SelectTab(RrCommon.RrPanelTab tab)
    {
        PanelService.SetSelectedTab(RrPanelInstance, tab);
    }

    public void Dispose()
    {
        PanelService.OnPanelChangeRequested -= StateHasChanged;
    }
}
