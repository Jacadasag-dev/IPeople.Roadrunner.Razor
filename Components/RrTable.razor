@typeparam T
@using System.Linq.Dynamic.Core
@using System.Reflection
@using Radzen.Blazor

@if (filteredData != null && filteredData.Any())
{
    <div class="Rr-table" id="dataView">
        <RadzenDataGrid Data="@filteredData" TItem="IDictionary<string, object>" ColumnWidth="200px" AllowColumnResize="true" AllowColumnReorder="true" AllowVirtualization="true"
                        AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterMode="FilterMode.Advanced" AllowPaging="true" AllowSorting="true"
                        ColumnResized="@OnColumnResizedHandler" ColumnReordered="@OnColumnReorderedHandler" PageSize="@pageSize">
            <Columns>
                @foreach (var column in columns)
                {
                    if (ShouldIncludeColumn(column.Key))
                    {
                        <RadzenDataGridColumn @key="@column.Key" Title="@column.Key" Type="typeof(string)" Property="@GetColumnPropertyExpression(column.Key, column.Value)" Width="@GetColumnWidth(column.Key)">
                            <Template>
                                @if (context != null && context.ContainsKey(column.Key) && context[column.Key] != null && context[column.Key].Equals(string.Empty))
                                {
                                    context[column.Key] = null;
                                }
                                @if (context != null && context.ContainsKey(column.Key))
                                {
                                    @context[column.Key]
                                }
                                else
                                {
                                    @("N/A") <!-- or any default value you prefer -->
                                }
                            </Template>
                        </RadzenDataGridColumn>
                    }
                }
            </Columns>
        </RadzenDataGrid>
    </div>
}
else
{
    <p>No data to show...</p>
}