
@if (Dropdown is not null)
{
    var dropdownInstance = RrStateService.GetComponent<Models.RrDropdown>(Dropdown) as Models.RrDropdown;
    var filteredItems = dropdownInstance?.Items?.Where(item => item != dropdownInstance.Text).ToList() ?? new List<string>();
    string dropdownCssClass = "";
    if (dropdownInstance.UIState == Models.SettingUIStates.Expanded)
    {
        dropdownCssClass = "expanded";
    }
    else if (dropdownInstance.UIState == Models.SettingUIStates.Collapsed)
    {
        dropdownCssClass = "minimized";
    }
    else if (dropdownInstance.UIState == Models.SettingUIStates.Neutral)
    {
        dropdownCssClass = "";
    }


    <div class="Rr-dropdown @dropdownCssClass @(string.IsNullOrEmpty(Dropdown.Text) ? "fade-red" : "")" @onclick="HandleDropdownClicked">
        <span class="Rr-dropdown-selectiontext">@(string.IsNullOrEmpty(dropdownInstance.Text) ? dropdownInstance.PlaceHolder : dropdownInstance.Text)</span>
        <span class="Rr-dropdown-arrow"></span>
        <div class="Rr-dropdown-content">
            <ul class="item-list">
                @if (filteredItems is not null && filteredItems.Any())
                {
                    @foreach (var item in filteredItems)
                    {
                        <li @onclick="() => HandleItemSelected(item)">
                            <span>@item</span>
                        </li>
                    }
                }
                else
                {
                    <li class="no-items">
                        <span>empty</span>
                    </li>
                }
            </ul>
        </div>
    </div>

}
